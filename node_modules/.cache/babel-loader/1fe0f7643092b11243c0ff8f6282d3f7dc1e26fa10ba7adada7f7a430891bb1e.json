{"ast":null,"code":"import http from './ApiService';\nconst API = \"http://localhost:8081/archive/api/models\";\n\n// http://localhost:8081/archive/api/models\n// ?page=0\n// &size=1\n// &sort=string\n// &name=test\n// &category=test\n// &rate=5\n\nexport async function getCards() {\n  const input = await http.get(API);\n  return input.models;\n}\nexport async function getCard(id) {\n  const requestUrl = API + \"/\" + id;\n  console.log(\"before requestUrl - \" + requestUrl);\n  const input = await http.get(requestUrl);\n  console.log(\"after requestUrl - \" + input.model.modelName);\n  return input.model;\n}\nfunction fetchModels({\n  page,\n  size,\n  sort,\n  wordName,\n  wordCategory,\n  rate: number\n}) {\n  // Создаем экземпляр URLSearchParams\n  const params = new URLSearchParams();\n  params.append('page', page);\n  params.append('size', size);\n  params.append('sort', sort);\n  params.append('wordName', wordName);\n  params.append('wordCategory', wordCategory);\n  params.append('rate', rate);\n\n  // Формируем полный URL\n  const url = `http://localhost:8081/archive/api/models?${params.toString()}`;\n\n  // Выполняем запрос с помощью axios\n  return http.get(url).then(response => response.data).catch(error => console.error('Error fetching models:', error));\n}","map":{"version":3,"names":["http","API","getCards","input","get","models","getCard","id","requestUrl","console","log","model","modelName","fetchModels","page","size","sort","wordName","wordCategory","rate","number","params","URLSearchParams","append","url","toString","then","response","data","catch","error"],"sources":["C:/Users/Starskvim/WebstormProjects/print-models-archive-front/src/services/ProductService.ts"],"sourcesContent":["import http from './ApiService';\r\nimport { PrintModelsResponse } from '../types/PrintModelsResponse';\r\nimport { PrintModelCard } from '../types/PrintModelCard';\r\nimport {PrintModelResponse} from \"../types/PrintModelResponse\";\r\n\r\nconst API = \"http://localhost:8081/archive/api/models\"\r\n\r\n// http://localhost:8081/archive/api/models\r\n// ?page=0\r\n// &size=1\r\n// &sort=string\r\n// &name=test\r\n// &category=test\r\n// &rate=5\r\n\r\nexport async function getCards(): Promise<PrintModelCard[]> {\r\n  const input = await http.get(API) as PrintModelsResponse\r\n  return input.models\r\n}\r\n\r\nexport async function getCard(id: String): Promise<PrintModelCard> {\r\n  const requestUrl = API + \"/\" + id\r\n  console.log(\"before requestUrl - \" + requestUrl)\r\n  const input = await http.get(requestUrl) as PrintModelResponse\r\n  console.log(\"after requestUrl - \" + input.model.modelName)\r\n  return input.model\r\n}\r\n\r\nfunction fetchModels({ page, size, sort, wordName, wordCategory, rate : number }): Promise<PrintModelCard[]> {\r\n  // Создаем экземпляр URLSearchParams\r\n  const params = new URLSearchParams();\r\n  params.append('page', page);\r\n  params.append('size', size);\r\n  params.append('sort', sort);\r\n  params.append('wordName', wordName);\r\n  params.append('wordCategory', wordCategory);\r\n  params.append('rate', rate);\r\n\r\n  // Формируем полный URL\r\n  const url = `http://localhost:8081/archive/api/models?${params.toString()}`;\r\n\r\n  // Выполняем запрос с помощью axios\r\n  return http.get(url)\r\n      .then(response => response.data)\r\n      .catch(error => console.error('Error fetching models:', error));\r\n}\r\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,cAAc;AAK/B,MAAMC,GAAG,GAAG,0CAA0C;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeC,QAAQA,CAAA,EAA8B;EAC1D,MAAMC,KAAK,GAAG,MAAMH,IAAI,CAACI,GAAG,CAACH,GAAG,CAAwB;EACxD,OAAOE,KAAK,CAACE,MAAM;AACrB;AAEA,OAAO,eAAeC,OAAOA,CAACC,EAAU,EAA2B;EACjE,MAAMC,UAAU,GAAGP,GAAG,GAAG,GAAG,GAAGM,EAAE;EACjCE,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGF,UAAU,CAAC;EAChD,MAAML,KAAK,GAAG,MAAMH,IAAI,CAACI,GAAG,CAACI,UAAU,CAAuB;EAC9DC,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGP,KAAK,CAACQ,KAAK,CAACC,SAAS,CAAC;EAC1D,OAAOT,KAAK,CAACQ,KAAK;AACpB;AAEA,SAASE,WAAWA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,YAAY;EAAEC,IAAI,EAAGC;AAAO,CAAC,EAA6B;EAC3G;EACA,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;EACpCD,MAAM,CAACE,MAAM,CAAC,MAAM,EAAET,IAAI,CAAC;EAC3BO,MAAM,CAACE,MAAM,CAAC,MAAM,EAAER,IAAI,CAAC;EAC3BM,MAAM,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;EAC3BK,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEN,QAAQ,CAAC;EACnCI,MAAM,CAACE,MAAM,CAAC,cAAc,EAAEL,YAAY,CAAC;EAC3CG,MAAM,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;;EAE3B;EACA,MAAMK,GAAG,GAAI,4CAA2CH,MAAM,CAACI,QAAQ,CAAC,CAAE,EAAC;;EAE3E;EACA,OAAOzB,IAAI,CAACI,GAAG,CAACoB,GAAG,CAAC,CACfE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIrB,OAAO,CAACqB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;AACrE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}