{"ast":null,"code":"import parse from'csv-parse/lib/sync';import http from'./http';import{dataUrl}from'../config.json';export async function getProducts(){const input=await http.get(dataUrl);const products=parse(input,{columns:true,skip_empty_lines:true});return sanitizeGenders(products);}export function sanitizeGenders(products){for(const product of products){if(product.gender!=='male'&&product.gender!=='female'&&product.gender!=='unisex'){product.gender=null;}}return products;}","map":{"version":3,"names":["parse","http","dataUrl","getProducts","input","get","products","columns","skip_empty_lines","sanitizeGenders","product","gender"],"sources":["C:/Users/Starskvim/WebstormProjects/product-list/src/services/product.ts"],"sourcesContent":["import parse from 'csv-parse/lib/sync';\r\n\r\nimport http from './http';\r\n\r\nimport { dataUrl } from '../config.json';\r\nimport { Product } from '../types/product';\r\n\r\nexport async function getProducts(): Promise<Product[]> {\r\n  const input = await http.get(dataUrl) as string;\r\n  const products: Product[] = parse(input, {\r\n    columns: true,\r\n    skip_empty_lines: true\r\n  });\r\n  return sanitizeGenders(products);\r\n}\r\n\r\nexport function sanitizeGenders(products: Product[]): Product[] {\r\n  for (const product of products) {\r\n    if (product.gender !== 'male' && product.gender !== 'female' && product.gender !== 'unisex') {\r\n      product.gender = null;\r\n    }\r\n  }\r\n  return products;\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,oBAAoB,CAEtC,MAAO,CAAAC,IAAI,KAAM,QAAQ,CAEzB,OAASC,OAAO,KAAQ,gBAAgB,CAGxC,MAAO,eAAe,CAAAC,WAAWA,CAAA,CAAuB,CACtD,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAAH,IAAI,CAACI,GAAG,CAACH,OAAO,CAAW,CAC/C,KAAM,CAAAI,QAAmB,CAAGN,KAAK,CAACI,KAAK,CAAE,CACvCG,OAAO,CAAE,IAAI,CACbC,gBAAgB,CAAE,IACpB,CAAC,CAAC,CACF,MAAO,CAAAC,eAAe,CAACH,QAAQ,CAAC,CAClC,CAEA,MAAO,SAAS,CAAAG,eAAeA,CAACH,QAAmB,CAAa,CAC9D,IAAK,KAAM,CAAAI,OAAO,GAAI,CAAAJ,QAAQ,CAAE,CAC9B,GAAII,OAAO,CAACC,MAAM,GAAK,MAAM,EAAID,OAAO,CAACC,MAAM,GAAK,QAAQ,EAAID,OAAO,CAACC,MAAM,GAAK,QAAQ,CAAE,CAC3FD,OAAO,CAACC,MAAM,CAAG,IAAI,CACvB,CACF,CACA,MAAO,CAAAL,QAAQ,CACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}