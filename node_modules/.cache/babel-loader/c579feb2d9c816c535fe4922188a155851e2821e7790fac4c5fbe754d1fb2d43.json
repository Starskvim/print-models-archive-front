{"ast":null,"code":"export function fill(canvas, color) {\n  const ctx = canvas.getContext('2d');\n  ctx.beginPath();\n  ctx.fillStyle = color;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n}\nexport function drawImage(canvas, image) {\n  const imgAR = image.width / image.height;\n  const canvasAR = canvas.width / canvas.height;\n  const ctx = canvas.getContext('2d');\n  if (imgAR < canvasAR) {\n    ctx.drawImage(image, (canvas.width - canvas.height * imgAR) / 2, 0, canvas.height * imgAR, canvas.height);\n  } else {\n    ctx.drawImage(image, 0, (canvas.height - canvas.width / imgAR) / 2, canvas.width, canvas.width / imgAR);\n  }\n}\nexport function drawAndFill(canvas, image, color) {\n  if (color) {\n    fill(canvas, color);\n  }\n  drawImage(canvas, image);\n}\n;","map":{"version":3,"names":["fill","canvas","color","ctx","getContext","beginPath","fillStyle","fillRect","width","height","drawImage","image","imgAR","canvasAR","drawAndFill"],"sources":["C:/Users/Starskvim/WebstormProjects/print-models-archive-front/src/utils/canvas.ts"],"sourcesContent":["export function fill(canvas: HTMLCanvasElement, color: string) {\r\n  const ctx = canvas.getContext('2d')!;\r\n  ctx.beginPath();\r\n  ctx.fillStyle = color;\r\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nexport function drawImage(canvas: HTMLCanvasElement, image: HTMLImageElement) {\r\n  const imgAR = image.width / image.height;\r\n  const canvasAR = canvas.width / canvas.height;\r\n  const ctx = canvas.getContext('2d')!;\r\n  if (imgAR < canvasAR) {\r\n    ctx.drawImage(image, (canvas.width - canvas.height * imgAR) / 2, 0, canvas.height * imgAR, canvas.height);\r\n  } else {\r\n    ctx.drawImage(image, 0, (canvas.height - canvas.width / imgAR) / 2, canvas.width, canvas.width / imgAR);\r\n  }\r\n}\r\n\r\nexport function drawAndFill(canvas: HTMLCanvasElement, image: HTMLImageElement, color?: string) {\r\n  if (color) {\r\n    fill(canvas, color);\r\n  }\r\n  drawImage(canvas, image);\r\n};\r\n"],"mappings":"AAAA,OAAO,SAASA,IAAIA,CAACC,MAAyB,EAAEC,KAAa,EAAE;EAC7D,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAE;EACpCD,GAAG,CAACE,SAAS,CAAC,CAAC;EACfF,GAAG,CAACG,SAAS,GAAGJ,KAAK;EACrBC,GAAG,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEN,MAAM,CAACO,KAAK,EAAEP,MAAM,CAACQ,MAAM,CAAC;AACjD;AAEA,OAAO,SAASC,SAASA,CAACT,MAAyB,EAAEU,KAAuB,EAAE;EAC5E,MAAMC,KAAK,GAAGD,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACF,MAAM;EACxC,MAAMI,QAAQ,GAAGZ,MAAM,CAACO,KAAK,GAAGP,MAAM,CAACQ,MAAM;EAC7C,MAAMN,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAE;EACpC,IAAIQ,KAAK,GAAGC,QAAQ,EAAE;IACpBV,GAAG,CAACO,SAAS,CAACC,KAAK,EAAE,CAACV,MAAM,CAACO,KAAK,GAAGP,MAAM,CAACQ,MAAM,GAAGG,KAAK,IAAI,CAAC,EAAE,CAAC,EAAEX,MAAM,CAACQ,MAAM,GAAGG,KAAK,EAAEX,MAAM,CAACQ,MAAM,CAAC;EAC3G,CAAC,MAAM;IACLN,GAAG,CAACO,SAAS,CAACC,KAAK,EAAE,CAAC,EAAE,CAACV,MAAM,CAACQ,MAAM,GAAGR,MAAM,CAACO,KAAK,GAAGI,KAAK,IAAI,CAAC,EAAEX,MAAM,CAACO,KAAK,EAAEP,MAAM,CAACO,KAAK,GAAGI,KAAK,CAAC;EACzG;AACF;AAEA,OAAO,SAASE,WAAWA,CAACb,MAAyB,EAAEU,KAAuB,EAAET,KAAc,EAAE;EAC9F,IAAIA,KAAK,EAAE;IACTF,IAAI,CAACC,MAAM,EAAEC,KAAK,CAAC;EACrB;EACAQ,SAAS,CAACT,MAAM,EAAEU,KAAK,CAAC;AAC1B;AAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}