{"ast":null,"code":"export default class AsyncImage {\n  constructor(src, onLoad) {\n    this.src = src;\n    this.onLoad = onLoad;\n    this.img = new Image();\n    if (onLoad) {\n      this.img.addEventListener('load', function (ev) {\n        onLoad(this, ev);\n      });\n    }\n    this.img.src = this.src;\n  }\n  close() {\n    if (this.onLoad) {\n      const onLoad = this.onLoad;\n      this.img.removeEventListener('load', function (ev) {\n        onLoad(this, ev);\n      });\n    }\n  }\n}","map":{"version":3,"names":["AsyncImage","constructor","src","onLoad","img","Image","addEventListener","ev","close","removeEventListener"],"sources":["C:/Users/Starskvim/WebstormProjects/product-list/src/classes/asyncImage.ts"],"sourcesContent":["export default class AsyncImage {\r\n  private img = new Image();\r\n  constructor(\r\n    private src: string,\r\n    private onLoad?: (img: HTMLImageElement, e: Event) => any\r\n  ) {\r\n    if (onLoad) {\r\n      this.img.addEventListener('load', function(this: HTMLImageElement, ev: Event) { onLoad(this, ev); })\r\n    }\r\n    this.img.src = this.src;\r\n  }\r\n  close() {\r\n    if (this.onLoad) {\r\n      const onLoad = this.onLoad;\r\n      this.img.removeEventListener('load', function(this: HTMLImageElement, ev: Event) { onLoad(this, ev); });\r\n    }\r\n  }\r\n}"],"mappings":"AAAA,eAAe,MAAMA,UAAU,CAAC;EAE9BC,WAAWA,CACDC,GAAW,EACXC,MAAiD,EACzD;IAAA,KAFQD,GAAW,GAAXA,GAAW;IAAA,KACXC,MAAiD,GAAjDA,MAAiD;IAAA,KAHnDC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IAKvB,IAAIF,MAAM,EAAE;MACV,IAAI,CAACC,GAAG,CAACE,gBAAgB,CAAC,MAAM,EAAE,UAAiCC,EAAS,EAAE;QAAEJ,MAAM,CAAC,IAAI,EAAEI,EAAE,CAAC;MAAE,CAAC,CAAC;IACtG;IACA,IAAI,CAACH,GAAG,CAACF,GAAG,GAAG,IAAI,CAACA,GAAG;EACzB;EACAM,KAAKA,CAAA,EAAG;IACN,IAAI,IAAI,CAACL,MAAM,EAAE;MACf,MAAMA,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAI,CAACC,GAAG,CAACK,mBAAmB,CAAC,MAAM,EAAE,UAAiCF,EAAS,EAAE;QAAEJ,MAAM,CAAC,IAAI,EAAEI,EAAE,CAAC;MAAE,CAAC,CAAC;IACzG;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}