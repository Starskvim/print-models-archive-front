{"ast":null,"code":"import{createRef,useEffect}from\"react\";import{drawAndFill,fill}from'../utils/canvas';import{default as AsyncImg}from'../classes/asyncImage';import{jsx as _jsx}from\"react/jsx-runtime\";const AsyncImage=_ref=>{let{src,width,height,cachedImages,className,bgColor,preloadBgColor}=_ref;const canvasRef=/*#__PURE__*/createRef();useEffect(()=>{const canvas=canvasRef.current;canvas.width=width;canvas.height=height;if(preloadBgColor){fill(canvas,preloadBgColor);}if(!src)return;if(!cachedImages[src]){const asyncImage=new AsyncImg(src,(img,e)=>{cachedImages[src]=img;drawAndFill(canvas,cachedImages[src],bgColor);});return()=>asyncImage.close();}else{drawAndFill(canvas,cachedImages[src],bgColor);}},[src]);return/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,className:className});};export default AsyncImage;","map":{"version":3,"names":["createRef","useEffect","drawAndFill","fill","default","AsyncImg","jsx","_jsx","AsyncImage","_ref","src","width","height","cachedImages","className","bgColor","preloadBgColor","canvasRef","canvas","current","asyncImage","img","e","close","ref"],"sources":["C:/Users/Starskvim/WebstormProjects/product-list/src/components/AsyncImage.tsx"],"sourcesContent":["import { createRef, useEffect } from \"react\";\r\nimport { drawAndFill, fill } from '../utils/canvas';\r\nimport { default as AsyncImg } from '../classes/asyncImage';\r\n\r\nconst AsyncImage = ({src, width, height, cachedImages, className, bgColor, preloadBgColor}:\r\n  {src: string, width: number, height: number, cachedImages: { [url in string]: HTMLImageElement }, className?: string, bgColor?: string, preloadBgColor?: string}) => {\r\n\r\n  const canvasRef = createRef<HTMLCanvasElement>();\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    if (preloadBgColor) {\r\n      fill(canvas, preloadBgColor);\r\n    }\r\n\r\n    if (!src) return;\r\n\r\n    if (!cachedImages[src]) {\r\n      const asyncImage = new AsyncImg(src, (img: HTMLImageElement, e: Event) => {\r\n        cachedImages[src] = img;\r\n        drawAndFill(canvas, cachedImages[src], bgColor);\r\n      });\r\n      return () => asyncImage.close();\r\n    } else {\r\n      drawAndFill(canvas, cachedImages[src], bgColor);\r\n    }\r\n  }, [src]);\r\n\r\n  return (<canvas ref={canvasRef} className={className}></canvas>);\r\n};\r\n\r\nexport default AsyncImage;"],"mappings":"AAAA,OAASA,SAAS,CAAEC,SAAS,KAAQ,OAAO,CAC5C,OAASC,WAAW,CAAEC,IAAI,KAAQ,iBAAiB,CACnD,OAASC,OAAO,GAAI,CAAAC,QAAQ,KAAQ,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5D,KAAM,CAAAC,UAAU,CAAGC,IAAA,EACoJ,IADnJ,CAACC,GAAG,CAAEC,KAAK,CAAEC,MAAM,CAAEC,YAAY,CAAEC,SAAS,CAAEC,OAAO,CAAEC,cACsF,CAAC,CAAAP,IAAA,CAEhK,KAAM,CAAAQ,SAAS,cAAGjB,SAAS,CAAoB,CAAC,CAEhDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiB,MAAM,CAAGD,SAAS,CAACE,OAAQ,CACjCD,MAAM,CAACP,KAAK,CAAGA,KAAK,CACpBO,MAAM,CAACN,MAAM,CAAGA,MAAM,CACtB,GAAII,cAAc,CAAE,CAClBb,IAAI,CAACe,MAAM,CAAEF,cAAc,CAAC,CAC9B,CAEA,GAAI,CAACN,GAAG,CAAE,OAEV,GAAI,CAACG,YAAY,CAACH,GAAG,CAAC,CAAE,CACtB,KAAM,CAAAU,UAAU,CAAG,GAAI,CAAAf,QAAQ,CAACK,GAAG,CAAE,CAACW,GAAqB,CAAEC,CAAQ,GAAK,CACxET,YAAY,CAACH,GAAG,CAAC,CAAGW,GAAG,CACvBnB,WAAW,CAACgB,MAAM,CAAEL,YAAY,CAACH,GAAG,CAAC,CAAEK,OAAO,CAAC,CACjD,CAAC,CAAC,CACF,MAAO,IAAMK,UAAU,CAACG,KAAK,CAAC,CAAC,CACjC,CAAC,IAAM,CACLrB,WAAW,CAACgB,MAAM,CAAEL,YAAY,CAACH,GAAG,CAAC,CAAEK,OAAO,CAAC,CACjD,CACF,CAAC,CAAE,CAACL,GAAG,CAAC,CAAC,CAET,mBAAQH,IAAA,WAAQiB,GAAG,CAAEP,SAAU,CAACH,SAAS,CAAEA,SAAU,CAAS,CAAC,CACjE,CAAC,CAED,cAAe,CAAAN,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}